name: A Better World CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  desktop:
    name: 🖥️ Desktop Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 🧱 Build Core Library (abetterworld)
        run: cargo build -p abetterworld --verbose

      - name: 🧱 Build Release Core Library (abetterworld)
        run: cargo build -p abetterworld --release --verbose

      - name: 🧱 Build Desktop App
        run: cargo build -p abw_example_desktop --verbose

      - name: 🧱 Build Release Desktop App
        run: cargo build -p abw_example_desktop --release --verbose

      - name: ✅ Run Native Tests
        run: cargo test --manifest-path crates/abetterworld/Cargo.toml --features paging_test -- --test-threads=1

  web:
    name: 🌐 Web Build & Test (WASM)
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 📡 Add WebAssembly target
        run: rustup target add wasm32-unknown-unknown

      - name: 🔧 Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: 📦 Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: 🧱 Build Web App (Debug)
        run: make build-web-debug

      - name: 🧱 Build Web App (Release)
        run: make build-web-release

      - name: 🌐 Run Web Tests (Firefox Headless)
        run: make test-web

  android:
    name: 🤖 Android Build
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 📦 Install cargo-ndk
        run: cargo install cargo-ndk

      - name: 📦 Add Android targets
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android

      - name: 📦 Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: 🛠 Fix NDK env for cargo-ndk
        run: echo "ANDROID_NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV

      - name: 📱 Build for Android (debug)
        env:
          OPENSSL_STATIC: "1"
          OPENSSL_NO_VENDOR: "0"
        run: make build-android-debug

      - name: 📱 Build for Android (release)
        env:
          OPENSSL_STATIC: "1"
          OPENSSL_NO_VENDOR: "0"
        run: make build-android-release

  ios:
    name: 🍎 iOS Build
    runs-on: self-hosted
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: 📦 Add iOS targets
        run: |
          rustup target add aarch64-apple-ios x86_64-apple-ios aarch64-apple-ios-sim

      - name: 🧱 Build iOS xcframework (Debug)
        run: make build-ios-debug

      - name: 🧱 Build iOS xcframework (Release)
        run: make build-ios-release
